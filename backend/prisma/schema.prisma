// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  role      UserRole @default(Student)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Building {
  id        String   @id @default(cuid())
  name      String
  code      String   @unique
  rooms     Room[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Room {
  id         String   @id @default(cuid())
  buildingId String
  building   Building @relation(fields: [buildingId], references: [id], onDelete: Cascade)
  name       String
  capacity   Int
  seats      Seat[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Seat {
  id        String     @id @default(cuid())
  roomId    String
  room      Room       @relation(fields: [roomId], references: [id], onDelete: Cascade)
  label     String
  row       Int
  col       Int
  features  String[]
  status    SeatStatus @default(Available)
  version   Int        @default(1)
  studentId String?    @unique
  student   Student?   @relation(fields: [studentId], references: [id])
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Student {
  id                  String   @id @default(cuid())
  name                String
  email               String   @unique
  tags                String[]
  accessibilityNeeds  String[]
  seat                Seat?
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
}

enum SeatStatus {
  Available
  Allocated
  Broken
}

enum UserRole {
  Admin
  Student
}
